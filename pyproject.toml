[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "note-review-scheduler"
version = "1.0.0"
description = "Intelligent note review scheduler with email notifications"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Note Review Scheduler Team", email = "admin@example.com"},
]
keywords = [
    "notes",
    "scheduler", 
    "email",
    "productivity",
    "automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Communications :: Email",
    "Topic :: Text Processing",
]
dependencies = [
    # Core dependencies
    "typer[all]>=0.9.0,<1.0.0",
    "rich>=13.0.0,<14.0.0",
    "loguru>=0.7.0,<1.0.0",
    
    # Database & Storage
    "sqlalchemy>=2.0.0,<3.0.0",
    
    # Email & Security
    "cryptography>=41.0.0,<42.0.0",
    "keyring>=24.0.0,<25.0.0",
    
    # Scheduling & Monitoring
    "schedule>=1.2.0,<2.0.0",
    "psutil>=5.9.0,<6.0.0",
    
    # File Processing
    "markdown>=3.4.0,<4.0.0",
    "requests>=2.31.0,<3.0.0",
    
    # Data Processing
    "pydantic>=2.0.0,<3.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    
    # Code Quality
    "black>=23.0.0,<24.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.5.0,<2.0.0",
    
    # Documentation
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.0.0,<10.0.0",
    "mkdocstrings[python]>=0.23.0,<1.0.0",
]
performance = [
    "uvloop>=0.17.0,<1.0.0; sys_platform != 'win32'",
    "orjson>=3.9.0,<4.0.0",
]
all = [
    "note-review-scheduler[dev,performance]",
]

[project.urls]
Homepage = "https://github.com/yourusername/note-review-scheduler"
Documentation = "https://github.com/yourusername/note-review-scheduler/docs"
Repository = "https://github.com/yourusername/note-review-scheduler.git"
"Bug Tracker" = "https://github.com/yourusername/note-review-scheduler/issues"
Changelog = "https://github.com/yourusername/note-review-scheduler/blob/main/CHANGELOG.md"

[project.scripts]
note-scheduler = "note_reviewer.cli:main"
notes = "note_reviewer.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/note_reviewer"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/CHANGELOG.md",
    "/pyproject.toml",
]

# Testing Configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src/note_reviewer",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Code Quality Configuration
[tool.black]
target-version = ["py39", "py310", "py311", "py312"]
line-length = 100
skip-string-normalization = false
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | venv
    | build
    | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise-without-from-inside-except
]
unfixable = ["F841"]  # unused variables

[tool.ruff.per-file-ignores]
"tests/**/*" = ["ARG", "S101", "S105", "S106"]  # Allow test patterns
"scripts/**/*" = ["T201", "S101"]  # Allow print statements in scripts

[tool.ruff.isort]
known-first-party = ["note_reviewer"]
force-sort-within-sections = true

# Type Checking Configuration  
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Be strict about imports
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# Be strict about None
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "schedule.*",
    "psutil.*",
    "keyring.*",
]
ignore_missing_imports = true

# Coverage Configuration
[tool.coverage.run]
source = ["src/note_reviewer"]
branch = true
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
